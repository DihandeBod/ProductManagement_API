// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductManagement_MOYO.Data;

#nullable disable

namespace ProductManagement_MOYO.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240831210917_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductManagement_MOYO.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<double>("OrderTotal")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.Property<bool>("isAssigned")
                        .HasColumnType("bit");

                    b.HasKey("OrderId");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("UserId");

                    b.HasIndex("VendorId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.OrderLine", b =>
                {
                    b.Property<int>("OrderLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderLineId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderLineId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderLines");
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.OrderStatus", b =>
                {
                    b.Property<int>("OrderStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderStatusId"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderStatusId");

                    b.ToTable("OrderStatuses");

                    b.HasData(
                        new
                        {
                            OrderStatusId = 1,
                            StatusName = "Unallocated"
                        },
                        new
                        {
                            OrderStatusId = 2,
                            StatusName = "Order Placed"
                        },
                        new
                        {
                            OrderStatusId = 3,
                            StatusName = "Order Packed"
                        },
                        new
                        {
                            OrderStatusId = 4,
                            StatusName = "On the way"
                        },
                        new
                        {
                            OrderStatusId = 5,
                            StatusName = "Delivered"
                        });
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            IsApproved = true,
                            IsDeleted = false,
                            ProductCategoryId = 1,
                            ProductDescription = "The all new iPhone 15",
                            ProductName = "iPhone 15"
                        },
                        new
                        {
                            ProductId = 2,
                            IsApproved = true,
                            IsDeleted = false,
                            ProductCategoryId = 2,
                            ProductDescription = "Very good laptop",
                            ProductName = "Lenovo IdeaPad 3"
                        },
                        new
                        {
                            ProductId = 3,
                            IsApproved = true,
                            IsDeleted = false,
                            ProductCategoryId = 3,
                            ProductDescription = "The all new Apple Watch",
                            ProductName = "Apple Watch 9"
                        },
                        new
                        {
                            ProductId = 4,
                            IsApproved = true,
                            IsDeleted = false,
                            ProductCategoryId = 4,
                            ProductDescription = "The old fashioned Casio",
                            ProductName = "Casio"
                        });
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.ProductCategory", b =>
                {
                    b.Property<int>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductCategoryId"));

                    b.Property<string>("ProductCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.HasKey("ProductCategoryId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductCategoryId = 1,
                            ProductCategoryName = "Phones",
                            ProductTypeId = 1
                        },
                        new
                        {
                            ProductCategoryId = 2,
                            ProductCategoryName = "Laptops",
                            ProductTypeId = 1
                        },
                        new
                        {
                            ProductCategoryId = 3,
                            ProductCategoryName = "Digital Watches",
                            ProductTypeId = 2
                        },
                        new
                        {
                            ProductCategoryId = 4,
                            ProductCategoryName = "Mechanical Watches",
                            ProductTypeId = 2
                        });
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.ProductLake", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Lake");
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.ProductType", b =>
                {
                    b.Property<int>("ProductTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductTypeId"));

                    b.Property<string>("ProductTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductTypeId");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            ProductTypeId = 1,
                            ProductTypeName = "Devices"
                        },
                        new
                        {
                            ProductTypeId = 2,
                            ProductTypeName = "Wearables"
                        });
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Owner"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Product Manager"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Product Capturer"
                        },
                        new
                        {
                            RoleId = 4,
                            RoleName = "Vendor"
                        },
                        new
                        {
                            RoleId = 5,
                            RoleName = "Customer"
                        });
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GitHubId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OAuthId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OAuthProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "dihandb@icloud.com",
                            OAuthProvider = "Default",
                            PasswordHash = "$2a$11$xXKOpnOEuWOixdZqB0SHruQWRYOrPvDtiIMnjYFVcNbrtK3.SFcAK",
                            RoleId = 3,
                            Username = "Dihandb"
                        },
                        new
                        {
                            Id = 2,
                            Email = "u21451193@tuks.co.za",
                            OAuthProvider = "Default",
                            PasswordHash = "$2a$11$Zmogmt/qZzJ26o2bCSGM1.SbBmJeMa1WQIfpo9eEHUkfpc96xTzVW",
                            RoleId = 3,
                            Username = "u21451193"
                        },
                        new
                        {
                            Id = 3,
                            Email = "vendor@gmail.co.za",
                            OAuthProvider = "Default",
                            PasswordHash = "$2a$11$Zmogmt/qZzJ26o2bCSGM1.SbBmJeMa1WQIfpo9eEHUkfpc96xTzVW",
                            RoleId = 3,
                            Username = "Vendor"
                        },
                        new
                        {
                            Id = 4,
                            Email = "customer@gmail.co.za",
                            OAuthProvider = "Default",
                            PasswordHash = "$2a$11$Zmogmt/qZzJ26o2bCSGM1.SbBmJeMa1WQIfpo9eEHUkfpc96xTzVW",
                            RoleId = 4,
                            Username = "Customer"
                        });
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.Vendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorId"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VendorId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Vendors");

                    b.HasData(
                        new
                        {
                            VendorId = 1,
                            UserId = 1,
                            VendorName = "Apple"
                        },
                        new
                        {
                            VendorId = 2,
                            UserId = 2,
                            VendorName = "Samsung"
                        });
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.VendorProduct", b =>
                {
                    b.Property<int>("VendorProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorProductId"));

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityOnHand")
                        .HasColumnType("int");

                    b.Property<int>("StockLimit")
                        .HasColumnType("int");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("VendorProductId");

                    b.HasIndex("ProductId");

                    b.HasIndex("VendorId");

                    b.ToTable("VendorProducts");

                    b.HasData(
                        new
                        {
                            VendorProductId = 1,
                            Price = 100.0,
                            ProductId = 1,
                            QuantityOnHand = 10,
                            StockLimit = 5,
                            VendorId = 1,
                            isActive = true
                        },
                        new
                        {
                            VendorProductId = 2,
                            Price = 200.0,
                            ProductId = 2,
                            QuantityOnHand = 10,
                            StockLimit = 5,
                            VendorId = 1,
                            isActive = true
                        },
                        new
                        {
                            VendorProductId = 3,
                            Price = 600.0,
                            ProductId = 3,
                            QuantityOnHand = 10,
                            StockLimit = 5,
                            VendorId = 1,
                            isActive = true
                        },
                        new
                        {
                            VendorProductId = 4,
                            Price = 400.0,
                            ProductId = 4,
                            QuantityOnHand = 10,
                            StockLimit = 5,
                            VendorId = 1,
                            isActive = true
                        },
                        new
                        {
                            VendorProductId = 5,
                            Price = 200.0,
                            ProductId = 1,
                            QuantityOnHand = 10,
                            StockLimit = 5,
                            VendorId = 2,
                            isActive = true
                        },
                        new
                        {
                            VendorProductId = 6,
                            Price = 300.0,
                            ProductId = 3,
                            QuantityOnHand = 10,
                            StockLimit = 5,
                            VendorId = 2,
                            isActive = true
                        });
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.Order", b =>
                {
                    b.HasOne("ProductManagement_MOYO.Models.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProductManagement_MOYO.Models.UserAccount", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProductManagement_MOYO.Models.Vendor", "Vendor")
                        .WithMany("Orders")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("OrderStatus");

                    b.Navigation("User");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.OrderLine", b =>
                {
                    b.HasOne("ProductManagement_MOYO.Models.Order", "Order")
                        .WithMany("Lines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProductManagement_MOYO.Models.Product", "Product")
                        .WithMany("OrderLines")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.Product", b =>
                {
                    b.HasOne("ProductManagement_MOYO.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.ProductCategory", b =>
                {
                    b.HasOne("ProductManagement_MOYO.Models.ProductType", "ProductType")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.UserAccount", b =>
                {
                    b.HasOne("ProductManagement_MOYO.Models.Role", "Role")
                        .WithMany("UserAccounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.Vendor", b =>
                {
                    b.HasOne("ProductManagement_MOYO.Models.UserAccount", "UserAccount")
                        .WithOne("Vendor")
                        .HasForeignKey("ProductManagement_MOYO.Models.Vendor", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.VendorProduct", b =>
                {
                    b.HasOne("ProductManagement_MOYO.Models.Product", "Product")
                        .WithMany("VendorProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProductManagement_MOYO.Models.Vendor", "Vendor")
                        .WithMany("Products")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.Order", b =>
                {
                    b.Navigation("Lines");
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.Product", b =>
                {
                    b.Navigation("OrderLines");

                    b.Navigation("VendorProducts");
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.ProductType", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.Role", b =>
                {
                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.UserAccount", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Vendor")
                        .IsRequired();
                });

            modelBuilder.Entity("ProductManagement_MOYO.Models.Vendor", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
